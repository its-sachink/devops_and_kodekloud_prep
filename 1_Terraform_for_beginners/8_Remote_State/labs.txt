######### 1 : Lab : Remote State #########

- In this lab, we will work with remote terraform state files.

    We will first start with the local state and then migrate it to remote state with an S3 backend.   

    The configuration directory we will work with is /root/terraform-projects/RemoteState


- Resource Name: state
    filename: /root/<variable local-state>
    content: "This configuration uses <variable local-state> state"

    Use the variable called local-state in the variables.tf file which is already created for you and make use of variable interpolation syntax ${..}.
    Once the configuration is ready, run a terraform init, plan and apply.

    ------- main.tf --------
    resource "local_file" "state" {
    filename = "/root/${var.local-state}"
    content  = "This configuration uses ${var.local-state} state"

    }

    -------- variables.tf --------
    variable remote-state {
        type = string
        default = "remote"
    }
    variable local-state {
        type = string
        default = "local"
    }


- Let's now move the state to a remote S3 backend. For this, we will make use of an S3 compatible storage called minio.
    Minio provides an S3-compatible API and allows us to configure the s3 backend in the same way as the actual S3 service in AWS Cloud.

    To explore minio and the S3 bucket that has been created, click on the Minio Browser tab on the top of the terminal window..
    Use the following credentials to login:
        
        Access Key: foofoo
        Secret Key: barbarbar


- Now, let us configure the remote backend with s3. Add a terraform block in a new file called terraform.tf with the following arguments:
    
    bucket: remote-state
    key: terraform.tfstate
    region: us-east-1

    --------- terraform.tf -----------
    terraform {
        backend "s3" {
            key = "terraform.tfstate"
            region = "us-east-1"
            bucket = "remote-state"
        }
    }

    ❯ terraform apply
╷   │ Error: Backend initialization required, please run "terraform init"

    - Hence run "terraform init" command again, to move state file to the S3 backend.


######### 2 : Lab : Terraform State Commands #########

- We have created a few resources in the configuration directory /root/terraform-projects/project-anime. Inspect it.

    Which of the following resources names are not part of the terraform state?

    # Run "terraform state list" and find out the resource address not part of the list.


- Which command would you use to show the attributes of the resource called classics stored in the terraform state?

    # terraform state show local_file.classics


- We no longer wish to manage the file located at /root/anime/hall-of-fame.txt by Terraform. Remove the resource responsible for this file completely from the management of terraform.

    # Remove the resource block called hall_of_fame from the main.tf 
        and also remove it from the state file by running "terraform state rm local_file.hall_of_fame"


- What is the id of the random_pet resource called super_pet_2 in the state file? The state file is stored remote.

    # terraform state show random_pet.super_pet_2


- Rename the resource from super_pet_1 to ultra_pet.
    Change the name in the main.tf file as well as the state.

    # Change the name in the main.tf and also run terraform state mv random_pet.super_pet_1 random_pet.ultra_pet